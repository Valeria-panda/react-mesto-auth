[{"C:\\Users\\solat\\dev\\auth\\react-auth\\src\\index.js":"1","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\App.js":"2","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\reportWebVitals.js":"3","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\Header.js":"4","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\Footer.js":"5","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\Main.js":"6","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\ImagePopup.js":"7","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\EditAvatarPopup.js":"8","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\EditProfilePopup.js":"9","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\AddPlacePopup.js":"10","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\ConfirmPopup.js":"11","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\utils\\Api.js":"12","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\contexts\\CurrentUserContext.js":"13","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\ProtectedRoute.js":"14","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\utils\\constant.js":"15","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\Card.js":"16","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\PopupWithForm.js":"17","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\Register.js":"18","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\Login.js":"19","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\AuthorizeForm.js":"20","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\Form.js":"21"},{"size":531,"mtime":1609338663054,"results":"22","hashOfConfig":"23"},{"size":8115,"mtime":1609340445384,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":824,"mtime":1609341240863,"results":"26","hashOfConfig":"23"},{"size":219,"mtime":1609338730815,"results":"27","hashOfConfig":"23"},{"size":1701,"mtime":1609338730833,"results":"28","hashOfConfig":"23"},{"size":575,"mtime":1609338730827,"results":"29","hashOfConfig":"23"},{"size":1094,"mtime":1609338730811,"results":"30","hashOfConfig":"23"},{"size":2433,"mtime":1609338730813,"results":"31","hashOfConfig":"23"},{"size":2239,"mtime":1609338730786,"results":"32","hashOfConfig":"23"},{"size":597,"mtime":1609338730809,"results":"33","hashOfConfig":"23"},{"size":2751,"mtime":1609338772308,"results":"34","hashOfConfig":"23"},{"size":86,"mtime":1609338750925,"results":"35","hashOfConfig":"23"},{"size":370,"mtime":1609338730840,"results":"36","hashOfConfig":"23"},{"size":220,"mtime":1609338772310,"results":"37","hashOfConfig":"23"},{"size":1912,"mtime":1609338730807,"results":"38","hashOfConfig":"23"},{"size":819,"mtime":1609340558770,"results":"39","hashOfConfig":"23"},{"size":489,"mtime":1609341467820,"results":"40","hashOfConfig":"23"},{"size":535,"mtime":1609341454784,"results":"41","hashOfConfig":"23"},{"size":1914,"mtime":1609341217809,"results":"42","hashOfConfig":"23"},{"size":1144,"mtime":1609341322576,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"7uybfo",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\solat\\dev\\auth\\react-auth\\src\\index.js",[],["91","92"],"C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\App.js",["93"],"\r\nimport React, { useState }  from 'react';\r\nimport {Route, Switch, Redirect } from 'react-router-dom';\r\nimport '../index.css';\r\nimport { api } from '../utils/Api.js';\r\nimport Header from '../components/Header.js';\r\nimport Main from '../components/Main.js';\r\nimport Footer from '../components/Footer.js';\r\nimport ImagePopup from '../components/ImagePopup.js';\r\nimport EditAvatarPopup from '../components/EditAvatarPopup.js';\r\nimport EditProfilePopup from '../components/EditProfilePopup.js';\r\nimport AddPlacePopup from '../components/AddPlacePopup.js';\r\nimport ConfirmPopup from './ConfirmPopup.js';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport { CurrentUserContext }  from '../contexts/CurrentUserContext.js'\r\nimport Login from './Login';\r\nimport Register from './Register';\r\n\r\n\r\nfunction App() {\r\n\r\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\r\n  const [isConfirmPopupOpen, setConfirmPopupOpen] = useState(false);\r\n  const [cards, setCards] = useState([]);\r\n  const [selectedCard, setSelectedCard] = useState({\r\n    isImageOpen: false,\r\n    link: '',\r\n    name: '',\r\n  });\r\n\r\n  const [currentUser, setCurrentUser] = useState({})\r\n  const [cardToDelete, setCardToDelete] = useState({});\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  // авторизация\r\n  const [loggedIn, setLoggedIn] = (false);\r\n  //данные о текущем пользователе\r\n  React.useEffect(() => {\r\n    api\r\n      .getUserInfo()\r\n      .then((currentUserInfoData) => {\r\n        setCurrentUser(currentUserInfoData);\r\n      })\r\n      .catch((err) =>\r\n        console.log(`Ошибка при загрузке информации о пользователе: ${err}`)\r\n      );\r\n  }, []);\r\n\r\n  //Открыть попап аватара\r\n  function handleEditAvatarClick() {\r\n    setEditAvatarPopupOpen(true);\r\n  }\r\n  //Открыть попап профииля\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopupOpen(true);\r\n  }\r\n  //Открыть попап карточки\r\n  function handleAddPlaceClick() {\r\n    setAddPlacePopupOpen(true);\r\n  }\r\n  // открыть фулсайз фото\r\n  function handleCardClick(card) {\r\n    const { link, name } = card;\r\n    setSelectedCard({ isImageOpen: true, link: link, name: name });\r\n  }\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api\r\n      .changeLikeCardStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n      // Обновляем стейт\r\n      setCards(newCards);\r\n    })\r\n    .catch((err) =>\r\n        console.log(`Ошибка при постановке лайка: ${err}`)\r\n    );\r\n  } \r\n   //Удалить карточку после подтверждения\r\n   function handleConfirm() {\r\n    api\r\n      .deleteCard(cardToDelete._id)\r\n      .then(() =>{\r\n        setCards(cards.filter((item) => item !== cardToDelete))\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => console.log(`Ошибка при удалении карточки: ${err}`));\r\n    \r\n  }\r\n  //Кликнуть на удаление карточки\r\n  function handleCardDelete(card) {\r\n    setConfirmPopupOpen(true);\r\n    setCardToDelete(card);\r\n  }\r\n  //Закрыть все попапы\r\n  function closeAllPopups() {\r\n    setEditProfilePopupOpen(false);\r\n    setEditAvatarPopupOpen(false);\r\n    setAddPlacePopupOpen(false);\r\n    setSelectedCard({});\r\n    setConfirmPopupOpen(false);\r\n  }\r\n  //Обновить аватар\r\n  function handleUpdateAvatar(newAvatar) {\r\n      setLoading(true);\r\n      api\r\n        .setUserAvatar(newAvatar)\r\n        .then((res) => {\r\n          setCurrentUser(res);\r\n          closeAllPopups();\r\n        })\r\n        .catch((err) => console.log(`Ошибка при обновлении аватара: ${err}`))\r\n        .finally(() => setLoading(false));\r\n        \r\n  }\r\n  //Обновить данные пользователя\r\n  function handleUpdateUser(userData) {\r\n      setLoading(true);\r\n      api\r\n        .updateUserInfo(userData)\r\n        .then((newUser) => {\r\n          setCurrentUser(newUser);\r\n          closeAllPopups();\r\n        })\r\n        .catch((err) => `Ошибка при обновлении информации о пользователе: ${err}`)\r\n        .finally(() => setLoading(false));\r\n      \r\n  }\r\n  //Получить данные карточек с фото\r\n  React.useEffect(() => {\r\n      api\r\n        .getInitialCards()\r\n        .then((cardData) => {\r\n          setCards(cardData);\r\n        })\r\n        .catch((err) => console.log(`Ошибка при загрузке карточек: ${err}`));\r\n  }, []);\r\n  \r\n  function handleAddPlace(card) {\r\n      setLoading(true);\r\n      api\r\n        .postNewCard(card)\r\n        .then((newCard) => setCards([newCard, ...cards]))\r\n        .catch((err) =>\r\n          console.log(`Ошибка при добавлении новой карточки: ${err}`)\r\n        )\r\n        .finally(() => setLoading(false));\r\n      closeAllPopups();\r\n  }\r\n    \r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n        <div className=\"root\">\r\n          <div className=\"page\">\r\n            <Header/>\r\n            <Switch>\r\n              <Route>\r\n                {/* при октрытии страницы проверить авторизован ли пол-ель? если нет,  переадресуем его логинится */}\r\n                {loggedIn ? <Redirect to='/'/> : <Redirect to='/login'/>}\r\n              </Route>\r\n             <ProtectedRoute path='/main' loggedIn={loggedIn} component={Main}/>\r\n             {/* роут авторизации пользователя(входа с паролем)*/}\r\n             <Route path='/login'>\r\n               <Login/>\r\n             </Route>\r\n             {/* роут регистрации пользователя*/}\r\n             <Route path='/register'>\r\n               <Register/>\r\n             </Route>\r\n            </Switch>\r\n\r\n            <Main  \r\n                onEditAvatar={handleEditAvatarClick}\r\n                onEditProfile={handleEditProfileClick}\r\n                onAddPlace={handleAddPlaceClick}\r\n                cards={cards}\r\n                onCardClick={handleCardClick}\r\n                onCardLike={handleCardLike}\r\n                onCardDelete={handleCardDelete} \r\n            />\r\n            <EditProfilePopup\r\n              isOpen={isEditProfilePopupOpen}\r\n              onClose={closeAllPopups}\r\n              onUpdateUser={handleUpdateUser}\r\n              isLoading={isLoading}\r\n            />\r\n            <EditAvatarPopup\r\n              onUpdateAvatar={handleUpdateAvatar}\r\n              isOpen={isEditAvatarPopupOpen}\r\n              onClose={closeAllPopups}\r\n              isLoading={isLoading}\r\n            />\r\n            <AddPlacePopup\r\n              isOpen={isAddPlacePopupOpen}\r\n              onClose={closeAllPopups}\r\n              onAddPlace={handleAddPlace}\r\n            />\r\n            <ConfirmPopup\r\n              isOpen={isConfirmPopupOpen}\r\n              onClose={closeAllPopups}\r\n              onConfirmDelete={handleConfirm}\r\n            />\r\n          \r\n            <ImagePopup \r\n            name={selectedCard.name}\r\n            link={selectedCard.link}\r\n            isOpen={selectedCard.isImageOpen}\r\n            onClose={closeAllPopups}\r\n            />\r\n            <Footer />\r\n          </div>\r\n        </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\reportWebVitals.js",[],"C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\Header.js",["94","95","96"],"import React from 'react';\r\nimport headerLogo from '../images/headerlogo.svg';\r\nimport { Link } from 'react-router-dom';\r\n// import HeaderAuthorizeInfo from './HeaderAuthorizeInfo';\r\n\r\nfunction Header\r\n  ({\r\n    loggedIn, email, signOut, pathname\r\n  }) \r\n \r\n  {\r\n    const enter = `${pathname === '/sign-in' ? 'Регистрация' : 'Войти'}`;\r\n    const enterPath = `${pathname === '/sign-in' ? '/sign-up' : '/sign-in'}`;\r\n\r\n  return (\r\n    <header className=\"header section\">\r\n     <img className=\"header__logo-image\" src={headerLogo} alt=\"логотип сайта\"/>\r\n     {/* {loggedIn  ? (<><HeaderAuthorizeInfo email={email} signOut={signOut}/></>)\r\n                : (<Link to={enterPath} className=\"link header__link\">{enter}</Link>)\r\n                } */}\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\Footer.js",[],"C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\Main.js",[],"C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\ImagePopup.js",[],"C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\EditAvatarPopup.js",[],"C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\EditProfilePopup.js",["97"],"import React, { useState } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n  const {isOpen, onClose, onUpdateUser, isLoading } = props\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  function handleChangeName(evt) {\r\n    if(evt.target.name === 'name')\r\n      setName(evt.target.value)\r\n  }\r\n  function handleChangeDescription(evt) {\r\n    if(evt.target.name === 'about')\r\n      setDescription(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onUpdateUser({\r\n      name: name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n    return (\r\n      <PopupWithForm\r\n        formName='popup'\r\n        formId = 'popup-edit-form'\r\n        title='Редактировать профиль'\r\n        submitButtonText='Сохранить'\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        onSubmit={handleSubmit}\r\n        isLoading={isLoading}  \r\n      >\r\n        <label htmlFor='name' className=\"popup__input-label\">\r\n        <input  \r\n          name=\"name\"\r\n          type='text'\r\n          value={name || ''}\r\n          className=\"popup__input popup__input_name\" \r\n          type=\"text\" \r\n          required \r\n          pattern='[А-Яа-яA-Za-z -]{1,}'\r\n          placeholder=\"Введите имя\" \r\n          minLength =\"2\" \r\n          maxLength =\"40\" \r\n          autoComplete=\"off\"\r\n          onChange={handleChangeName}\r\n        />\r\n        <span className='popup__input-error' id=\"name-error\"></span>\r\n        </label>\r\n        <label htmlFor='about' className=\"popup__input-label\">\r\n        <input \r\n          type='text'\r\n          name=\"about\" \r\n          className=\"popup__input popup__input_job\" \r\n          value={description || ''}\r\n          required \r\n          placeholder=\"Чем вы занимаетесь?\" \r\n          minLength =\"2\" \r\n          maxLength =\"200\" \r\n          autoComplete=\"off\"\r\n          onChange={handleChangeDescription}\r\n        />\r\n        <span className='popup__input-error' id=\"about-error\"></span>\r\n        </label>\r\n        </PopupWithForm>\r\n    );\r\n  }\r\nexport default EditProfilePopup;","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\AddPlacePopup.js",["98"],"import React, { useState }  from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\n\r\n\r\nfunction AddPlacePopup({isOpen,onClose, onAddPlace, isLoading }) {\r\n\r\n  const [name, setName] = useState('');\r\n  const [link, setLink] = useState('');\r\n  \r\n  React.useEffect(() => {\r\n    setName('');\r\n    setLink('');\r\n  }, [isOpen]);\r\n\r\n  function handleChangeCardName(evt) {\r\n    if(evt.target.name === 'name')\r\n      setName(evt.target.value)\r\n      // : setLink(evt.target.value);\r\n  }\r\n  function handleChangeCardLink(evt) {\r\n    if(evt.target.name === 'link')\r\n      // ? setName(evt.target.value)\r\n      setLink(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onAddPlace({\r\n      name,\r\n      link,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      formName='popup'\r\n      formId = 'popup-addCard'\r\n      title='Новое место'\r\n      submitButtonText='Сохранить'\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      isLoading={isLoading}\r\n    >\r\n      <label htmlFor='name' className=\"popup__input-label\">\r\n            <input \r\n            id='name'\r\n            name='name'\r\n            value={name || ''}\r\n            placeholder='Название'\r\n            minLength='1'\r\n            maxLength='30'\r\n            required\r\n            onChange={handleChangeCardName}\r\n            className=\"popup__input popup__input_name\"\r\n            type=\"text\" \r\n            autoComplete=\"off\"\r\n             />\r\n            <span className='popup__input-error' \r\n            \r\n          id='name-error' id=\"name-error\"></span>\r\n        </label>\r\n        <label htmlFor='link' className=\"popup__input-label\">   \r\n          <input \r\n          type='url'\r\n          id='link'\r\n          name='link'\r\n          value={link || ''}\r\n          placeholder='Ссылка на картинку'\r\n          required\r\n          onChange={handleChangeCardLink}\r\n          className=\"popup__input popup__input_link\" \r\n          autoComplete=\"off\" \r\n          minLength =\"2\" \r\n          maxLength =\"200\"/>\r\n          <span className='popup__input-error' id=\"link-error\"></span>\r\n        </label>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\ConfirmPopup.js",[],"C:\\Users\\solat\\dev\\auth\\react-auth\\src\\utils\\Api.js",[],"C:\\Users\\solat\\dev\\auth\\react-auth\\src\\contexts\\CurrentUserContext.js",[],"C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\ProtectedRoute.js",[],"C:\\Users\\solat\\dev\\auth\\react-auth\\src\\utils\\constant.js",[],"C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\Card.js",[],"C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\PopupWithForm.js",[],"C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\Register.js",["99"],"C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\Login.js",["100"],"C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\AuthorizeForm.js",[],"C:\\Users\\solat\\dev\\auth\\react-auth\\src\\components\\Form.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":38,"column":20,"nodeType":"107","messageId":"108","endLine":38,"endColumn":31},{"ruleId":"105","severity":1,"message":"109","line":3,"column":10,"nodeType":"107","messageId":"108","endLine":3,"endColumn":14},{"ruleId":"105","severity":1,"message":"110","line":12,"column":11,"nodeType":"107","messageId":"108","endLine":12,"endColumn":16},{"ruleId":"105","severity":1,"message":"111","line":13,"column":11,"nodeType":"107","messageId":"108","endLine":13,"endColumn":20},{"ruleId":"112","severity":1,"message":"113","line":51,"column":11,"nodeType":"114","endLine":51,"endColumn":22},{"ruleId":"112","severity":1,"message":"113","line":62,"column":27,"nodeType":"114","endLine":62,"endColumn":42},{"ruleId":"115","severity":2,"message":"116","line":14,"column":23,"nodeType":"107","messageId":"117","endLine":14,"endColumn":31},{"ruleId":"115","severity":2,"message":"116","line":14,"column":23,"nodeType":"107","messageId":"117","endLine":14,"endColumn":31},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'setLoggedIn' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'enter' is assigned a value but never used.","'enterPath' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-undef","'onSubmit' is not defined.","undef","no-global-assign","no-unsafe-negation"]