[{"C:\\Users\\solat\\dev\\react-auth\\src\\index.js":"1","C:\\Users\\solat\\dev\\react-auth\\src\\components\\App.js":"2","C:\\Users\\solat\\dev\\react-auth\\src\\reportWebVitals.js":"3","C:\\Users\\solat\\dev\\react-auth\\src\\components\\Main.js":"4","C:\\Users\\solat\\dev\\react-auth\\src\\components\\ImagePopup.js":"5","C:\\Users\\solat\\dev\\react-auth\\src\\components\\EditAvatarPopup.js":"6","C:\\Users\\solat\\dev\\react-auth\\src\\components\\EditProfilePopup.js":"7","C:\\Users\\solat\\dev\\react-auth\\src\\components\\Footer.js":"8","C:\\Users\\solat\\dev\\react-auth\\src\\components\\AddPlacePopup.js":"9","C:\\Users\\solat\\dev\\react-auth\\src\\components\\ConfirmPopup.js":"10","C:\\Users\\solat\\dev\\react-auth\\src\\components\\Header.js":"11","C:\\Users\\solat\\dev\\react-auth\\src\\utils\\Api.js":"12","C:\\Users\\solat\\dev\\react-auth\\src\\contexts\\CurrentUserContext.js":"13","C:\\Users\\solat\\dev\\react-auth\\src\\components\\ProtectedRoute.js":"14","C:\\Users\\solat\\dev\\react-auth\\src\\components\\InfoTooltip.js":"15","C:\\Users\\solat\\dev\\react-auth\\src\\components\\Login.js":"16","C:\\Users\\solat\\dev\\react-auth\\src\\components\\Register.js":"17","C:\\Users\\solat\\dev\\react-auth\\src\\utils\\auth.js":"18","C:\\Users\\solat\\dev\\react-auth\\src\\utils\\constant.js":"19","C:\\Users\\solat\\dev\\react-auth\\src\\components\\Card.js":"20","C:\\Users\\solat\\dev\\react-auth\\src\\components\\PopupWithForm.js":"21","C:\\Users\\solat\\dev\\react-auth\\src\\components\\AuthInfo.js":"22","C:\\Users\\solat\\dev\\react-auth\\src\\components\\AuthorizeForm.js":"23","C:\\Users\\solat\\dev\\react-auth\\src\\components\\Form.js":"24","C:\\Users\\solat\\dev\\react-auth\\src\\errors\\notAuthorizedError.js":"25","C:\\Users\\solat\\dev\\react-auth\\src\\errors\\badRequestError.js":"26"},{"size":639,"mtime":1609752583081,"results":"27","hashOfConfig":"28"},{"size":10470,"mtime":1610209508264,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"28"},{"size":1701,"mtime":1609338730833,"results":"31","hashOfConfig":"28"},{"size":575,"mtime":1609338730827,"results":"32","hashOfConfig":"28"},{"size":1086,"mtime":1610187088263,"results":"33","hashOfConfig":"28"},{"size":2402,"mtime":1610187080167,"results":"34","hashOfConfig":"28"},{"size":219,"mtime":1609338730815,"results":"35","hashOfConfig":"28"},{"size":2223,"mtime":1609749647422,"results":"36","hashOfConfig":"28"},{"size":589,"mtime":1610187095810,"results":"37","hashOfConfig":"28"},{"size":841,"mtime":1610019709043,"results":"38","hashOfConfig":"28"},{"size":2751,"mtime":1609338772308,"results":"39","hashOfConfig":"28"},{"size":86,"mtime":1609338750925,"results":"40","hashOfConfig":"28"},{"size":370,"mtime":1609338730840,"results":"41","hashOfConfig":"28"},{"size":583,"mtime":1610175603674,"results":"42","hashOfConfig":"28"},{"size":511,"mtime":1610207757876,"results":"43","hashOfConfig":"28"},{"size":575,"mtime":1610211098773,"results":"44","hashOfConfig":"28"},{"size":2058,"mtime":1611510542813,"results":"45","hashOfConfig":"28"},{"size":220,"mtime":1609338772310,"results":"46","hashOfConfig":"28"},{"size":1912,"mtime":1609338730807,"results":"47","hashOfConfig":"28"},{"size":861,"mtime":1610187035397,"results":"48","hashOfConfig":"28"},{"size":275,"mtime":1610177030287,"results":"49","hashOfConfig":"28"},{"size":3689,"mtime":1610187444433,"results":"50","hashOfConfig":"28"},{"size":1308,"mtime":1610186904752,"results":"51","hashOfConfig":"28"},{"size":207,"mtime":1611411863941,"results":"52","hashOfConfig":"28"},{"size":201,"mtime":1611411900336,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"fp2qxe",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\solat\\dev\\react-auth\\src\\index.js",[],["108","109"],"C:\\Users\\solat\\dev\\react-auth\\src\\components\\App.js",["110"],"\r\nimport React, { useState }  from 'react';\r\nimport {\r\n  Route, Switch, useLocation, Redirect, useHistory,\r\n} from 'react-router-dom';\r\n\r\nimport '../index.css';\r\nimport { api } from '../utils/Api.js';\r\nimport Header from '../components/Header.js';\r\nimport Main from '../components/Main.js';\r\nimport Footer from '../components/Footer.js';\r\nimport ImagePopup from '../components/ImagePopup.js';\r\nimport EditAvatarPopup from '../components/EditAvatarPopup.js';\r\nimport EditProfilePopup from '../components/EditProfilePopup.js';\r\nimport AddPlacePopup from '../components/AddPlacePopup.js';\r\nimport ConfirmPopup from './ConfirmPopup.js';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport * as auth from '../utils/auth';\r\nimport { CurrentUserContext }  from '../contexts/CurrentUserContext.js'\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport resolvePath from '../images/resolve.svg';\r\nimport rejectPath from '../images/reject.svg';\r\nimport loading from '../images/loading.svg';\r\n\r\n\r\nfunction App() {\r\n\r\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\r\n  const [isConfirmPopupOpen, setConfirmPopupOpen] = useState(false);\r\n  const [cards, setCards] = useState([]);\r\n  const [selectedCard, setSelectedCard] = useState({\r\n    isImageOpen: false,\r\n    link: '',\r\n    name: '',\r\n  });\r\n\r\n  const [currentUser, setCurrentUser] = useState({})\r\n  const [cardToDelete, setCardToDelete] = useState({});\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  // авторизация\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [isAuthInfoOpened, setAuthInfoOpened] = useState(false);\r\n  const [isInfoTooltipOpen, setInfoTooltipOpen] = useState(false);\r\n  const [message, setMessage] = useState({\r\n    iconPath: loading,\r\n    text: ''\r\n  });\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const escape = require('escape-html');\r\n\r\n  // Проверить токен\r\n  React.useEffect(() => {\r\n    const jwt = localStorage.getItem('jwt');\r\n    if (jwt) {\r\n      auth.getContent(jwt)\r\n        .then((res) => {\r\n          setLoggedIn(true);\r\n          setEmail(res.data.email);\r\n          history.push('/');\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n  }, [history]);\r\n\r\n  // Регистрация\r\n  function handleRegister(password, email) {\r\n    auth.register(escape(password), email)\r\n      .then(() => {\r\n        setMessage({ iconPath: resolvePath, text: 'Вы успешно зарегистрировались!' });\r\n        history.push('/sign-in');\r\n      })\r\n      .catch((err) => setMessage({ iconPath: rejectPath, text: err.message }));\r\n    setInfoTooltipOpen(true);\r\n  }\r\n\r\n  // Авторизация\r\n  function handleLogin(password, email) {\r\n    auth.authorize(escape(password), email)\r\n      .then((data) => {\r\n        auth.getContent(data)\r\n          .then((res) => {\r\n            setEmail(res.data.email);\r\n          })\r\n          .catch(err => console.log(err));\r\n        setLoggedIn(true);\r\n        setMessage({ iconPath: resolvePath, text: 'Вы успешно вошли в приложение!' });\r\n        history.push('/');\r\n      })\r\n      .catch((err) => setMessage({ iconPath: rejectPath, text: err.message }))\r\n    setInfoTooltipOpen(true);\r\n  }\r\n\r\n  // Выход\r\n  function handleSignOut() {\r\n    setLoggedIn(false);\r\n    localStorage.removeItem('jwt');\r\n    setEmail('');\r\n    history.push('/sign-in');\r\n  }\r\n\r\n  //данные о текущем пользователе\r\n  React.useEffect(() => {\r\n    api\r\n      .getUserInfo()\r\n      .then((currentUserInfoData) => {\r\n        setCurrentUser(currentUserInfoData);\r\n      })\r\n      .catch((err) =>\r\n        console.log(`Ошибка при загрузке информации о пользователе: ${err}`)\r\n      );\r\n  }, []);\r\n\r\n  //Открыть попап аватара\r\n  function handleEditAvatarClick() {\r\n    setEditAvatarPopupOpen(true);\r\n  }\r\n  //Открыть попап профииля\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopupOpen(true);\r\n  }\r\n  //Открыть попап карточки\r\n  function handleAddPlaceClick() {\r\n    setAddPlacePopupOpen(true);\r\n  }\r\n  // открыть фулсайз фото\r\n  function handleCardClick(card) {\r\n    const { link, name } = card;\r\n    setSelectedCard({ isImageOpen: true, link: link, name: name });\r\n  }\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api\r\n      .changeLikeCardStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n      // Обновляем стейт\r\n      setCards(newCards);\r\n    })\r\n    .catch((err) =>\r\n        console.log(`Ошибка при постановке лайка: ${err}`)\r\n    );\r\n  } \r\n   //Удалить карточку после подтверждения\r\n   function handleConfirm() {\r\n    api\r\n      .deleteCard(cardToDelete._id)\r\n      .then(() =>{\r\n        setCards(cards.filter((item) => item !== cardToDelete))\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => console.log(`Ошибка при удалении карточки: ${err}`));\r\n    \r\n  }\r\n  //Кликнуть на удаление карточки\r\n  function handleCardDelete(card) {\r\n    setConfirmPopupOpen(true);\r\n    setCardToDelete(card);\r\n  }\r\n  //Закрыть все попапы\r\n  function closeAllPopups() {\r\n    setEditProfilePopupOpen(false);\r\n    setEditAvatarPopupOpen(false);\r\n    setAddPlacePopupOpen(false);\r\n    setSelectedCard({});\r\n    setConfirmPopupOpen(false);\r\n    setInfoTooltipOpen(false)\r\n  }\r\n  //Обновить аватар\r\n  function handleUpdateAvatar(newAvatar) {\r\n      setLoading(true);\r\n      api\r\n        .setUserAvatar(newAvatar)\r\n        .then((res) => {\r\n          setCurrentUser(res);\r\n          closeAllPopups();\r\n        })\r\n        .catch((err) => console.log(`Ошибка при обновлении аватара: ${err}`))\r\n        .finally(() => setLoading(false));\r\n        \r\n  }\r\n  //Обновить данные пользователя\r\n  function handleUpdateUser(userData) {\r\n      setLoading(true);\r\n      api\r\n        .updateUserInfo(userData)\r\n        .then((newUser) => {\r\n          setCurrentUser(newUser);\r\n          closeAllPopups();\r\n        })\r\n        .catch((err) => `Ошибка при обновлении информации о пользователе: ${err}`)\r\n        .finally(() => setLoading(false));\r\n      \r\n  }\r\n  //Получить данные карточек с фото\r\n  React.useEffect(() => {\r\n      api\r\n        .getInitialCards()\r\n        .then((cardData) => {\r\n          setCards(cardData);\r\n        })\r\n        .catch((err) => console.log(`Ошибка при загрузке карточек: ${err}`));\r\n  }, []);\r\n  \r\n  function handleAddPlace(card) {\r\n      setLoading(true);\r\n      api\r\n        .postNewCard(card)\r\n        .then((newCard) => {\r\n          setCards([newCard, ...cards]);\r\n          closeAllPopups();\r\n        })\r\n        .catch((err) =>\r\n          console.log(`Ошибка при добавлении новой карточки: ${err}`)\r\n        )\r\n        .finally(() => setLoading(false));\r\n      \r\n  }\r\n    \r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n        <div className=\"root\">\r\n          <div className=\"page\">\r\n          {(loggedIn && isAuthInfoOpened)}\r\n\r\n            <Header loggedIn={loggedIn}\r\n                    locaction={location}\r\n                    email={email}\r\n                    signOut={handleSignOut}\r\n                    isAuthInfoOpened={isAuthInfoOpened}\r\n            />\r\n            <Switch>\r\n      \r\n            <ProtectedRoute exact path=\"/\" loggedIn={loggedIn} component={Main}\r\n                    cards={cards}\r\n                    onCardClick={handleCardClick}\r\n                    onCardLike={handleCardLike}\r\n                    onCardDelete={handleCardDelete}\r\n                    onEditProfile={handleEditProfileClick}\r\n                    onAddPlace={handleAddPlaceClick}\r\n                    onEditAvatar={handleEditAvatarClick}\r\n            />\r\n          <Route path='/sign-in'>\r\n            <Login onLogin={handleLogin} />\r\n          </Route>\r\n         \r\n          <Route path='/sign-up'>\r\n            <Register onRegister={handleRegister} />\r\n          </Route>\r\n          <Route>\r\n            {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\r\n          </Route>\r\n        </Switch>\r\n\r\n        <Footer />\r\n\r\n        <InfoTooltip\r\n          isOpen={isInfoTooltipOpen}\r\n          onClose={closeAllPopups}\r\n          loggedIn={loggedIn}\r\n          message={message}\r\n        />\r\n\r\n            <EditProfilePopup\r\n              isOpen={isEditProfilePopupOpen}\r\n              onClose={closeAllPopups}\r\n              onUpdateUser={handleUpdateUser}\r\n              isLoading={isLoading}\r\n            />\r\n            <EditAvatarPopup\r\n              onUpdateAvatar={handleUpdateAvatar}\r\n              isOpen={isEditAvatarPopupOpen}\r\n              onClose={closeAllPopups}\r\n              isLoading={isLoading}\r\n            />\r\n            <AddPlacePopup\r\n              isOpen={isAddPlacePopupOpen}\r\n              onClose={closeAllPopups}\r\n              onAddPlace={handleAddPlace}\r\n            />\r\n            <ConfirmPopup\r\n              isOpen={isConfirmPopupOpen}\r\n              onClose={closeAllPopups}\r\n              onConfirmDelete={handleConfirm}\r\n            />\r\n          \r\n            <ImagePopup \r\n            name={selectedCard.name}\r\n            link={selectedCard.link}\r\n            isOpen={selectedCard.isImageOpen}\r\n            onClose={closeAllPopups}\r\n            />\r\n            \r\n          </div>\r\n        </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\solat\\dev\\react-auth\\src\\reportWebVitals.js",[],"C:\\Users\\solat\\dev\\react-auth\\src\\components\\Main.js",[],"C:\\Users\\solat\\dev\\react-auth\\src\\components\\ImagePopup.js",[],"C:\\Users\\solat\\dev\\react-auth\\src\\components\\EditAvatarPopup.js",[],"C:\\Users\\solat\\dev\\react-auth\\src\\components\\EditProfilePopup.js",[],"C:\\Users\\solat\\dev\\react-auth\\src\\components\\Footer.js",[],"C:\\Users\\solat\\dev\\react-auth\\src\\components\\AddPlacePopup.js",[],"C:\\Users\\solat\\dev\\react-auth\\src\\components\\ConfirmPopup.js",[],"C:\\Users\\solat\\dev\\react-auth\\src\\components\\Header.js",[],"C:\\Users\\solat\\dev\\react-auth\\src\\utils\\Api.js",[],"C:\\Users\\solat\\dev\\react-auth\\src\\contexts\\CurrentUserContext.js",[],"C:\\Users\\solat\\dev\\react-auth\\src\\components\\ProtectedRoute.js",[],"C:\\Users\\solat\\dev\\react-auth\\src\\components\\InfoTooltip.js",[],"C:\\Users\\solat\\dev\\react-auth\\src\\components\\Login.js",[],"C:\\Users\\solat\\dev\\react-auth\\src\\components\\Register.js",[],"C:\\Users\\solat\\dev\\react-auth\\src\\utils\\auth.js",[],"C:\\Users\\solat\\dev\\react-auth\\src\\utils\\constant.js",[],"C:\\Users\\solat\\dev\\react-auth\\src\\components\\Card.js",[],"C:\\Users\\solat\\dev\\react-auth\\src\\components\\PopupWithForm.js",[],"C:\\Users\\solat\\dev\\react-auth\\src\\components\\AuthInfo.js",[],"C:\\Users\\solat\\dev\\react-auth\\src\\components\\AuthorizeForm.js",[],"C:\\Users\\solat\\dev\\react-auth\\src\\components\\Form.js",[],"C:\\Users\\solat\\dev\\react-auth\\src\\errors\\notAuthorizedError.js",[],"C:\\Users\\solat\\dev\\react-auth\\src\\errors\\badRequestError.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":48,"column":28,"nodeType":"117","messageId":"118","endLine":48,"endColumn":45},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'setAuthInfoOpened' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]